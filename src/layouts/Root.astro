---
import "@/styles/globals.css";
import Header from "@/components/Header/Header.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html
  lang="en"
  x-data="{darkMode: localStorage.getItem('darkMode')}"
  x-init="$watch('darkMode', val => localStorage.setItem('darkMode', val))"
  x-bind:data-theme="darkMode"
>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <!-- <script is:inline>
      // The configured mode is stored in local storage
      const isDarkMode = localStorage.getItem("darkMode");

      // Set theme to 'dark' if darkMode = 'true'
      const theme = isDarkMode === "true" ? "dark" : "";

      // Put dark class on html tag to enable dark mode
      document.querySelector("html").className = theme;
    </script> -->
    <!-- <script is:inline>
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script> -->
  </head>
  <body>
    <Header />
    <slot />
  </body>
</html>
<style is:global>
  html {
    font-family: system-ui, sans-serif;
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
</style>
